fluidRow(
column(
width = 12,
h2("Project Overview"),
p("In this project, I aim to provide insight into the evolving landscape of Artificial Intelligence (AI) development and its impact on jobs. Utilizing two Kaggle datasets, I have crafted visualizations to capture the ongoing AI revolution and the challenges it poses to employment."),
h3("Project Goals"),
p("1. Visualize AI Development Index for countries and assess the global AI progress."),
p("2. Analyze the threat of AI to jobs, highlighting occupations most impacted by AI."),
p("3. Create an interactive world map to better understand AI development indices on a global scale."),
p("4. Generate a word cloud to identify industries most affected by AI."),
h3("Datasets Used"),
p("1. AI Global Index: 62 rows, 13 columns, capturing AI development metrics for countries."),
p("2. AI Job Threat Index: 4706 rows, 6 columns, detailing job roles and AI's influence.")
)
)
)
),
tabPanel("AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("variable1", "Choose a variable:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score"))
),
mainPanel(
plotOutput("ai_plot1", height = "800px")
)
)
),
tabPanel("AI Threat to Jobs",
sidebarLayout(
sidebarPanel(
selectInput("variable2", "Choose a variable:", choices = C("AI_Impact", "Tasks","AI_Models", "AI_Workload_Ratio", "Domain")),
mainPanel(
plotOutput("ai_plot2", height = "800px")
)
)
),
tabPanel("Map Visualization of AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("map_variable", "Choose a variable to map:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score")),
br(),
actionButton("update_map", "Update Map")
),
mainPanel(
leafletOutput("map_plot", height = "800px")
)
)
),
# Add a new tab for the Word Cloud
tabPanel("Industries most impacted by AI",
mainPanel(
wordcloud2Output("wordcloud", height = "600px")
)
)
)
#The Server function
server <- function(input, output) {
ui <- navbarPage(  "AI Development App",
tabPanel("Overview",
fluidPage(
fluidRow(
column(
width = 12,
h2("Project Overview"),
p("In this project, I aim to provide insight into the evolving landscape of Artificial Intelligence (AI) development and its impact on jobs. Utilizing two Kaggle datasets, I have crafted visualizations to capture the ongoing AI revolution and the challenges it poses to employment."),
h3("Project Goals"),
p("1. Visualize AI Development Index for countries and assess the global AI progress."),
p("2. Analyze the threat of AI to jobs, highlighting occupations most impacted by AI."),
p("3. Create an interactive world map to better understand AI development indices on a global scale."),
p("4. Generate a word cloud to identify industries most affected by AI."),
h3("Datasets Used"),
p("1. AI Global Index: 62 rows, 13 columns, capturing AI development metrics for countries."),
p("2. AI Job Threat Index: 4706 rows, 6 columns, detailing job roles and AI's influence.")
)
)
)
),
tabPanel("AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("variable1", "Choose a variable:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score"))
),
mainPanel(
plotOutput("ai_plot1", height = "800px")
)
)
),
tabPanel("AI Threat to Jobs",
sidebarLayout(
sidebarPanel(
selectInput("variable2", "Choose a variable:", choices = C("AI_Impact", "Tasks","AI_Models", "AI_Workload_Ratio", "Domain")),
mainPanel(
plotOutput("ai_plot2", height = "800px")
)
)
),
tabPanel("Map Visualization of AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("map_variable", "Choose a variable to map:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score")),
br(),
actionButton("update_map", "Update Map")
),
mainPanel(
leafletOutput("map_plot", height = "800px")
)
)
),
# Add a new tab for the Word Cloud
tabPanel("Industries most impacted by AI",
mainPanel(
wordcloud2Output("wordcloud", height = "600px")
)
)
)
# Load necessary libraries
library(shiny)
#Data Cleaning and formatting for visualization purposes
library(readr)
library(sf)
AI_index<- read_csv("AI_index_db.csv")
AI_threat <- read_csv("Ai_threat.csv", col_types = cols(`AI Impact` = col_number()))
colnames(AI_threat)[colnames(AI_threat) == "Job titiles"] <- "Job_Titles"
colnames(AI_threat)[colnames(AI_threat) == "AI Impact"] <- "AI_Impact"
colnames(AI_threat)[colnames(AI_threat) == "AI models"] <- "AI_Models"
AI_index$Country[AI_index$Country == "China"] <- "People's Republic of China"
AI_index$Country[AI_index$Country == "The Netherlands"] <- "Netherlands"
library(maptools)
world <- readShapeSpatial("C:/Users/jhunjhun/Downloads/rstudio-export-1/world_shape/ne_50m_admin_0_countries")  ## You will need to change this file path
world@data<- merge(world@data, AI_index, by.x='NAME_EN', by.y='Country')
AI_threat2 <- AI_threat[AI_threat$AI_Impact > 75, ]
AI_threat2 <- AI_threat2[AI_threat2$Tasks>200, ]
AI_threat2 <- AI_threat2[AI_threat2$AI_Models> 1400, ]
# Load necessary libraries
library(shiny)
library(ggplot2)
library(leaflet)
library(wordcloud2)
#The UI function
ui <- navbarPage(  "AI Development App",
tabPanel("Overview",
fluidPage(
fluidRow(
column(
width = 12,
h2("Project Overview"),
p("In this project, I aim to provide insight into the evolving landscape of Artificial Intelligence (AI) development and its impact on jobs. Utilizing two Kaggle datasets, I have crafted visualizations to capture the ongoing AI revolution and the challenges it poses to employment."),
h3("Project Goals"),
p("1. Visualize AI Development Index for countries and assess the global AI progress."),
p("2. Analyze the threat of AI to jobs, highlighting occupations most impacted by AI."),
p("3. Create an interactive world map to better understand AI development indices on a global scale."),
p("4. Generate a word cloud to identify industries most affected by AI."),
h3("Datasets Used"),
p("1. AI Global Index: 62 rows, 13 columns, capturing AI development metrics for countries."),
p("2. AI Job Threat Index: 4706 rows, 6 columns, detailing job roles and AI's influence.")
)
)
)
),
tabPanel("AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("variable1", "Choose a variable:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score"))
),
mainPanel(
plotOutput("ai_plot1", height = "800px")
)
)
),
tabPanel("AI Threat to Jobs",
sidebarLayout(
sidebarPanel(
selectInput("variable2", "Choose a variable:", choices = colnames(AI_threat))
),
mainPanel(
plotOutput("ai_plot2", height = "800px")
)
)
),
tabPanel("Map Visualization of AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("map_variable", "Choose a variable to map:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score")),
br(),
actionButton("update_map", "Update Map")
),
mainPanel(
leafletOutput("map_plot", height = "800px")
)
)
),
# Add a new tab for the Word Cloud
tabPanel("Industries most impacted by AI",
mainPanel(
wordcloud2Output("wordcloud", height = "600px")
)
)
)
#The Server function
server <- function(input, output) {
# Create a reactive expression to filter the data based on the selected variable
filtered_data <- reactive({
selected_variable <- input$map_variable
world@data %>%
select(NAME_EN, selected_variable)  # Select the NAME_EN and the chosen variable
})
myLabels <- paste("<strong>", world@data$Cluster, "</strong>", "<br/>",
"Population:", world@data$POP_EST)
# Generate the plot for the map based on the filtered data
output$map_plot <- renderLeaflet({
leaflet(world) %>% addTiles() %>%
addPolygons(
fillColor = ~color_palette(world@data[[input$map_variable]]),
label = lapply(myLabels, htmltools::HTML),# Use the selected variable
weight = 1
) %>%
addLegend(
pal = color_palette,
values = world@data[[input$map_variable]],  # Use the selected variable
title = "Selected Variable",
position = "bottomleft",
na.label = "Missing"
)
})
observeEvent(input$update_map, {
# Trigger the map update when the "Update Map" button is clicked
output$map_plot <- renderLeaflet({
leaflet(world) %>% addTiles() %>%
addPolygons(
fillColor = ~color_palette(world@data[[input$map_variable]]),
label = lapply(myLabels, htmltools::HTML),# Use the selected variable
weight = 1
) %>%
addLegend(
pal = color_palette,
values = filtered_data()[[input$map_variable]],  # Use the selected variable
title = "Selected Variable",
position = "bottomleft",
na.label = "Missing"
)
})
})
# Create a reactive expression to filter the data based on user input for Visualization 1
filtered_data1 <- reactive({
AI_index
})
# Generate the plot for Visualization 1 based on the filtered data
output$ai_plot1 <- renderPlot({
ggplot(filtered_data1(), aes(x = Country, y = .data[[input$variable1]])) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
labs(
title = "AI Development of Countries",
x = "Country",
y = "Development score (out of 100)"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 14),
plot.margin = margin(10, 10, 10, 10, "pt")
)
})
# Create a reactive expression to filter the data based on user input for Visualization 2
filtered_data2 <- reactive({
AI_threat2
})
# Generate the plot for Visualization 2 based on the filtered data
output$ai_plot2 <- renderPlot({
ggplot(filtered_data2(), aes(x = `Job_Titles`, y = .data[[input$variable2]])) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
labs(
title = "AI Threat by Job Titles",
x = "Job Titles",
y = input$variable2
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 14),
plot.margin = margin(10, 10, 10, 10, "pt")
)
})
output$wordcloud <- renderWordcloud2({
wordcloud2(word_freq, size = 0.5, color = "blue", backgroundColor = "white")
})
}
# Create the Shiny app
shinyApp(ui, server)
colnames(AI_threat)
# Load necessary libraries
library(shiny)
library(ggplot2)
library(leaflet)
library(wordcloud2)
#The UI function
ui <- navbarPage(  "AI Development App",
tabPanel("Overview",
fluidPage(
fluidRow(
column(
width = 12,
h2("Project Overview"),
p("In this project, I aim to provide insight into the evolving landscape of Artificial Intelligence (AI) development and its impact on jobs. Utilizing two Kaggle datasets, I have crafted visualizations to capture the ongoing AI revolution and the challenges it poses to employment."),
h3("Project Goals"),
p("1. Visualize AI Development Index for countries and assess the global AI progress."),
p("2. Analyze the threat of AI to jobs, highlighting occupations most impacted by AI."),
p("3. Create an interactive world map to better understand AI development indices on a global scale."),
p("4. Generate a word cloud to identify industries most affected by AI."),
h3("Datasets Used"),
p("1. AI Global Index: 62 rows, 13 columns, capturing AI development metrics for countries."),
p("2. AI Job Threat Index: 4706 rows, 6 columns, detailing job roles and AI's influence.")
)
)
)
),
tabPanel("AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("variable1", "Choose a variable:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score"))
),
mainPanel(
plotOutput("ai_plot1", height = "800px")
)
)
),
tabPanel("AI Threat to Jobs",
sidebarLayout(
sidebarPanel(
selectInput("variable2", "Choose a variable:", choices = C("AI_Impact", "Tasks","AI_Models", "AI_Workload_Ratio", "Domain")
),
mainPanel(
plotOutput("ai_plot2", height = "800px")
)
)
),
tabPanel("Map Visualization of AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("map_variable", "Choose a variable to map:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score")),
br(),
actionButton("update_map", "Update Map")
),
mainPanel(
leafletOutput("map_plot", height = "800px")
)
)
),
# Add a new tab for the Word Cloud
tabPanel("Industries most impacted by AI",
mainPanel(
wordcloud2Output("wordcloud", height = "600px")
)
)
)
#The Server function
server <- function(input, output) {
# Load necessary libraries
library(shiny)
library(ggplot2)
library(leaflet)
library(wordcloud2)
#The UI function
ui <- navbarPage(  "AI Development App",
tabPanel("Overview",
fluidPage(
fluidRow(
column(
width = 12,
h2("Project Overview"),
p("In this project, I aim to provide insight into the evolving landscape of Artificial Intelligence (AI) development and its impact on jobs. Utilizing two Kaggle datasets, I have crafted visualizations to capture the ongoing AI revolution and the challenges it poses to employment."),
h3("Project Goals"),
p("1. Visualize AI Development Index for countries and assess the global AI progress."),
p("2. Analyze the threat of AI to jobs, highlighting occupations most impacted by AI."),
p("3. Create an interactive world map to better understand AI development indices on a global scale."),
p("4. Generate a word cloud to identify industries most affected by AI."),
h3("Datasets Used"),
p("1. AI Global Index: 62 rows, 13 columns, capturing AI development metrics for countries."),
p("2. AI Job Threat Index: 4706 rows, 6 columns, detailing job roles and AI's influence.")
)
)
)
),
tabPanel("AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("variable1", "Choose a variable:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score"))
),
mainPanel(
plotOutput("ai_plot1", height = "800px")
)
)
),
tabPanel("AI Threat to Jobs",
sidebarLayout(
sidebarPanel(
selectInput("variable2", "Choose a variable:", choices = c("AI_Impact", "Tasks","AI_Models", "AI_Workload_Ratio", "Domain"))
),
mainPanel(
plotOutput("ai_plot2", height = "800px")
)
)
),
tabPanel("Map Visualization of AI Development Index",
sidebarLayout(
sidebarPanel(
selectInput("map_variable", "Choose a variable to map:", choices = c( "Talent", "Infrastructure", "Operating Environment","Research","Development",              "Government Strategy","Commercial","Total score")),
br(),
actionButton("update_map", "Update Map")
),
mainPanel(
leafletOutput("map_plot", height = "800px")
)
)
),
# Add a new tab for the Word Cloud
tabPanel("Industries most impacted by AI",
mainPanel(
wordcloud2Output("wordcloud", height = "600px")
)
)
)
#The Server function
server <- function(input, output) {
# Create a reactive expression to filter the data based on the selected variable
filtered_data <- reactive({
selected_variable <- input$map_variable
world@data %>%
select(NAME_EN, selected_variable)  # Select the NAME_EN and the chosen variable
})
myLabels <- paste("<strong>", world@data$Cluster, "</strong>", "<br/>",
"Population:", world@data$POP_EST)
# Generate the plot for the map based on the filtered data
output$map_plot <- renderLeaflet({
leaflet(world) %>% addTiles() %>%
addPolygons(
fillColor = ~color_palette(world@data[[input$map_variable]]),
label = lapply(myLabels, htmltools::HTML),# Use the selected variable
weight = 1
) %>%
addLegend(
pal = color_palette,
values = world@data[[input$map_variable]],  # Use the selected variable
title = "Selected Variable",
position = "bottomleft",
na.label = "Missing"
)
})
observeEvent(input$update_map, {
# Trigger the map update when the "Update Map" button is clicked
output$map_plot <- renderLeaflet({
leaflet(world) %>% addTiles() %>%
addPolygons(
fillColor = ~color_palette(world@data[[input$map_variable]]),
label = lapply(myLabels, htmltools::HTML),# Use the selected variable
weight = 1
) %>%
addLegend(
pal = color_palette,
values = filtered_data()[[input$map_variable]],  # Use the selected variable
title = "Selected Variable",
position = "bottomleft",
na.label = "Missing"
)
})
})
# Create a reactive expression to filter the data based on user input for Visualization 1
filtered_data1 <- reactive({
AI_index
})
# Generate the plot for Visualization 1 based on the filtered data
output$ai_plot1 <- renderPlot({
ggplot(filtered_data1(), aes(x = Country, y = .data[[input$variable1]])) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
labs(
title = "AI Development of Countries",
x = "Country",
y = "Development score (out of 100)"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 14),
plot.margin = margin(10, 10, 10, 10, "pt")
)
})
# Create a reactive expression to filter the data based on user input for Visualization 2
filtered_data2 <- reactive({
AI_threat2
})
# Generate the plot for Visualization 2 based on the filtered data
output$ai_plot2 <- renderPlot({
ggplot(filtered_data2(), aes(x = `Job_Titles`, y = .data[[input$variable2]])) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
labs(
title = "AI Threat by Job Titles",
x = "Job Titles",
y = input$variable2
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 14),
plot.margin = margin(10, 10, 10, 10, "pt")
)
})
output$wordcloud <- renderWordcloud2({
wordcloud2(word_freq, size = 0.5, color = "blue", backgroundColor = "white")
})
}
# Create the Shiny app
shinyApp(ui, server)
View(dtm)
